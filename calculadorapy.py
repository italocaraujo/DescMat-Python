# -*- coding: utf-8 -*-
"""calculadorapy.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10NC-dLPZf5-djG6gFLOLiVdvoEAycTgE
"""

import math

def menu():
    print("Escolha a operação desejada:")
    print("1. Soma")
    print("2. Subtração")
    print("3. Multiplicação")
    print("4. Divisão")
    print("5. Potenciação")
    print("6. Radiciação")
    print("9. Exponencial (e^x)")
    print("19. Módulo")
    print("20. Divisão Inteira")
    print("21. Conversão de Graus para Radianos")
    print("22. Conversão de Radianos para Graus")
    print("23. Cálculo de Hipotenusa")
    print("24. Arredondamento (round)")
    print("25. Arredondamento para Cima (ceil)")
    print("26. Arredondamento para Baixo (floor)")
    print("27. Maior/Menor de Dois Números (max/min)")
    print("28. Cálculo da Distância Entre Dois Pontos")
    print("29. Cálculo de Determinante de Matriz 2x2")
    print("30. Solução de Equação de Primeiro Grau")
    print("31. Cálculo de Área e Perímetro de Retângulo")
    print("32. Cálculo de Área e Perímetro de Círculo")
    print("33. Verificação de Triângulo (Desigualdade Triangular)")
    print("34. Verificação de Números Primos")
    print("35. Conversor de Unidades")
    print("36. Calculadora de Juros Simples")
    print("37. Calculadora de Juros Compostos")
    print("38. Soma de Números Naturais (usando Recursão)")
    print("39. Fatorial de um Número (usando Recursão)")
    print("40. Permutação")
    print("41. Combinação")
    print("42. Conversor de Bases Numéricas")
    print("43. Cálculo de Média")
    print("44. Cálculo de Desvio Padrão")
    print("45. Calcular Tangente de uma Reta Dados os Coeficientes")
    print("0. Sair")

def soma(a, b):
    return a + b

def subtracao(a, b):
    return a - b

def multiplicacao(a, b):
    return a * b

def divisao(a, b):
    if b != 0:
        return a / b
    else:
        return "Divisão por zero não é permitida."

def potenciacao(base, expoente):
    return base ** expoente

def radiciacao(num, grau):
    return num ** (1 / grau)

def exponencial(x):
    return math.exp(x)

def modulo(a, b):
    return a % b

def divisao_inteira(a, b):
    return a // b

def graus_para_radianos(graus):
    return math.radians(graus)

def radianos_para_graus(radianos):
    return math.degrees(radianos)

def hipotenusa(cateto1, cateto2):
    return math.sqrt(cateto1**2 + cateto2**2)

def arredondamento(valor):
    return round(valor)

def arredondamento_para_cima(valor):
    return math.ceil(valor)

def arredondamento_para_baixo(valor):
    return math.floor(valor)

def maior_menor(a, b):
    return {"maior": max(a, b), "menor": min(a, b)}

def distancia_pontos(x1, y1, x2, y2):
    return math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)

def determinante_matriz_2x2(a, b, c, d):
    return a * d - b * c

def equacao_primeiro_grau(a, b):
    if a != 0:
        return -b / a
    else:
        return "A não pode ser zero."

def area_perimetro_retangulo(largura, altura):
    area = largura * altura
    perimetro = 2 * (largura + altura)
    return area, perimetro

def area_perimetro_circulo(raio):
    area = math.pi * (raio ** 2)
    perimetro = 2 * math.pi * raio
    return area, perimetro

def verificar_triangulo(a, b, c):
    return a + b > c and a + c > b and b + c > a

def verificar_numero_primo(num):
    if num > 1:
        for i in range(2, int(math.sqrt(num)) + 1):
            if num % i == 0:
                return False
        return True
    else:
        return False

def conversor_unidades(valor, unidade):
    conversoes = {
        "milhas_para_quilometros": valor * 1.60934,
        "metros_para_pes": valor * 3.28084
    }
    return conversoes.get(unidade, "Conversão não disponível")

def juros_simples(capital, taxa, tempo):
    return capital * (1 + taxa * tempo)

def juros_compostos(capital, taxa, tempo):
    return capital * (1 + taxa) ** tempo

def soma_numeros_naturais(n):
    if n == 1:
        return 1
    else:
        return n + soma_numeros_naturais(n - 1)

def fatorial(n):
    if n == 0:
        return 1
    else:
        return n * fatorial(n - 1)

def permutacao(n, r):
    return math.factorial(n) // math.factorial(n - r)

def combinacao(n, r):
    return math.factorial(n) // (math.factorial(r) * math.factorial(n - r))

def conversor_bases(numero, base):
    if base == 'binario':
        return bin(numero)
    elif base == 'hexadecimal':
        return hex(numero)
    else:
        return "Base não suportada"

def calculo_media(valores):
    return sum(valores) / len(valores)

def calculo_desvio_padrao(valores):
    media = calculo_media(valores)
    variancia = sum((x - media) ** 2 for x in valores) / len(valores)
    return math.sqrt(variancia)

def tangente_reta(coef_a, coef_b):
    return -coef_a

def main():
    while True:
        menu()
        escolha = int(input("Digite sua escolha: "))

        if escolha == 0:
            break

        if escolha in [1, 2, 3, 4]:
            a = float(input("Digite o primeiro número: "))
            b = float(input("Digite o segundo número: "))

            if escolha == 1:
                print(f"Soma: {soma(a, b)}")
            elif escolha == 2:
                print(f"Subtração: {subtracao(a, b)}")
            elif escolha == 3:
                print(f"Multiplicação: {multiplicacao(a, b)}")
            elif escolha == 4:
                print(f"Divisão: {divisao(a, b)}")

        elif escolha == 5:
            base = float(input("Digite a base: "))
            expoente = float(input("Digite o expoente: "))
            print(f"Potenciação: {potenciacao(base, expoente)}")

        elif escolha == 6:
            num = float(input("Digite o número: "))
            grau = float(input("Digite o grau da raiz: "))
            print(f"Radiciação: {radiciacao(num, grau)}")

        elif escolha == 9:
            x = float(input("Digite o valor de x: "))
            print(f"Exponencial (e^x): {exponencial(x)}")

        elif escolha == 19:
            a = float(input("Digite o primeiro número: "))
            b = float(input("Digite o segundo número: "))
            print(f"Módulo: {modulo(a, b)}")

        elif escolha == 20:
            a = int(input("Digite o primeiro número: "))
            b = int(input("Digite o segundo número: "))
            print(f"Divisão Inteira: {divisao_inteira(a, b)}")

        elif escolha == 21:
            graus = float(input("Digite o valor em graus: "))
            print(f"Radianos: {graus_para_radianos(graus)}")

        elif escolha == 22:
            radianos = float(input("Digite o valor em radianos: "))
            print(f"Graus: {radianos_para_graus(radianos)}")

        elif escolha == 23:
            cateto1 = float(input("Digite o valor do primeiro cateto: "))
            cateto2 = float(input("Digite o valor do segundo cateto: "))
            print(f"Hipotenusa: {hipotenusa(cateto1, cateto2)}")

        elif escolha == 24:
            valor = float(input("Digite o valor a ser arredondado: "))
            print(f"Arredondamento: {arredondamento(valor)}")

        elif escolha == 25:
            valor = float(input("Digite o valor a ser arredondado para cima: "))
            print(f"Arredondamento para Cima: {arredondamento_para_cima(valor)}")

        elif escolha == 26:
            valor = float(input("Digite o valor a ser arredondado para baixo: "))
            print(f"Arredondamento para Baixo: {arredondamento_para_baixo(valor)}")

        elif escolha == 27:
            a = float(input("Digite o primeiro número: "))
            b = float(input("Digite o segundo número: "))
            resultado = maior_menor(a, b)
            print(f"Maior: {resultado['maior']}, Menor: {resultado['menor']}")

        elif escolha == 28:
            x1 = float(input("Digite a coordenada x1: "))
            y1 = float(input("Digite a coordenada y1: "))
            x2 = float(input("Digite a coordenada x2: "))
            y2 = float(input("Digite a coordenada y2: "))
            print(f"Distância Entre Pontos: {distancia_pontos(x1, y1, x2, y2)}")

        elif escolha == 29:
            a = float(input("Digite o elemento a da matriz 2x2: "))
            b = float(input("Digite o elemento b da matriz 2x2: "))
            c = float(input("Digite o elemento c da matriz 2x2: "))
            d = float(input("Digite o elemento d da matriz 2x2: "))
            print(f"Determinante da Matriz 2x2: {determinante_matriz_2x2(a, b, c, d)}")

        elif escolha == 30:
            a = float(input("Digite o coeficiente a: "))
            b = float(input("Digite o coeficiente b: "))
            print(f"Solução da Equação de Primeiro Grau: {equacao_primeiro_grau(a, b)}")

        elif escolha == 31:
            largura = float(input("Digite a largura do retângulo: "))
            altura = float(input("Digite a altura do retângulo: "))
            area, perimetro = area_perimetro_retangulo(largura, altura)
            print(f"Área: {area}, Perímetro: {perimetro}")

        elif escolha == 32:
            raio = float(input("Digite o raio do círculo: "))
            area, perimetro = area_perimetro_circulo(raio)
            print(f"Área: {area}, Perímetro: {perimetro}")

        elif escolha == 33:
            a = float(input("Digite o lado a do triângulo: "))
            b = float(input("Digite o lado b do triângulo: "))
            c = float(input("Digite o lado c do triângulo: "))
            if verificar_triangulo(a, b, c):
                print("Os valores formam um triângulo.")
            else:
                print("Os valores não formam um triângulo.")

        elif escolha == 34:
            num = int(input("Digite um número para verificar se é primo: "))
            if verificar_numero_primo(num):
                print(f"{num} é um número primo.")
            else:
                print(f"{num} não é um número primo.")

        elif escolha == 35:
            valor = float(input("Digite o valor a ser convertido: "))
            unidade = input("Digite a unidade de conversão (milhas_para_quilometros ou metros_para_pes): ")
            print(f"Resultado da conversão: {conversor_unidades(valor, unidade)}")

        elif escolha == 36:
            capital = float(input("Digite o capital inicial: "))
            taxa = float(input("Digite a taxa de juros (em decimal): "))
            tempo = float(input("Digite o tempo (em anos): "))
            print(f"Juros Simples: {juros_simples(capital, taxa, tempo)}")

        elif escolha == 37:
            capital = float(input("Digite o capital inicial: "))
            taxa = float(input("Digite a taxa de juros (em decimal): "))
            tempo = float(input("Digite o tempo (em anos): "))
            print(f"Juros Compostos: {juros_compostos(capital, taxa, tempo)}")

        elif escolha == 38:
            n = int(input("Digite o valor de n: "))
            print(f"Soma de Números Naturais: {soma_numeros_naturais(n)}")

        elif escolha == 39:
            n = int(input("Digite o valor de n: "))
            print(f"Fatorial de {n}: {fatorial(n)}")

        elif escolha == 40:
            n = int(input("Digite o valor de n: "))
            r = int(input("Digite o valor de r: "))
            print(f"Permutação de {n} e {r}: {permutacao(n, r)}")

        elif escolha == 41:
            n = int(input("Digite o valor de n: "))
            r = int(input("Digite o valor de r: "))
            print(f"Combinação de {n} e {r}: {combinacao(n, r)}")

        elif escolha == 42:
            numero = int(input("Digite o número a ser convertido: "))
            base = input("Digite a base para conversão (binario ou hexadecimal): ")
            print(f"Resultado da conversão: {conversor_bases(numero, base)}")

        elif escolha == 43:
            valores = list(map(float, input("Digite os valores separados por espaço: ").split()))
            print(f"Média: {calculo_media(valores)}")

        elif escolha == 44:
            valores = list(map(float, input("Digite os valores separados por espaço: ").split()))
            print(f"Desvio Padrão: {calculo_desvio_padrao(valores)}")

        elif escolha == 45:
            coef_a = float(input("Digite o coeficiente a: "))
            coef_b = float(input("Digite o coeficiente b: "))
            print(f"Tangente da Reta: {tangente_reta(coef_a, coef_b)}")

        else:
            print("Escolha inválida. Tente novamente.")

if __name__ == "__main__":
    main()